# a b       -> (a b)
assert false !true

# a + b     -> (+ a b)
assert 3 1 + 2

# a+b     -> (+ a b)
assert 3 1+2

# a + b * c -> (+ a (* b c))
assert 7 1 + 2 * 3
assert true 1 + 2 == 7 - 4

# a b; c d  -> (a b) (c d)
let a 1; assert 1 a

## {a}       -> {a}
#	echo '{log 1}'                                | node src/moa.js 2>&1 | grep -qx 1
## {a; b c}  -> {a (b c)}
#	echo '{let a 1; log a}'                       | node src/moa.js 2>&1 | grep -qx 1
## a()       -> (a)
## a(b)      -> (a b)
## a.b()     -> ((. a b))
## a.b(c)    -> ((. a b) c)
## a[b]      -> ([ a b)
## a.b[c]    -> ([ (. a b) c)
## edge cases
#	echo '1; log 2'                               | node src/moa.js 2>&1 | grep -qx 2
#	echo '{1; log 2}'                             | node src/moa.js 2>&1 | grep -qx 2
#	echo '{{1; log 2}}'                           | node src/moa.js 2>&1 | grep -qx 2
#	echo 'def a (b) {b += 1; b += 2}; log (a 1)'  | node src/moa.js 2>&1 | grep -qx 4
#	echo 'def a (b) {b += 1; b += 2}\nlog (a 1)'  | node src/moa.js 2>&1 | grep -qx 4
#	echo 'def a (b c) b + c; log (a 1 2)'         | node src/moa.js 2>&1 | grep -qx 3
