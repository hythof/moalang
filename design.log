# Do
- Multi paradigm for functional and structual
- Keep conceptual integrity

# Do not
- Hardware operations like IO, system call and directory memory access
- Inheritance
- Access control and reflection
- Unnecessary symbols like semi-corron, comma and parenthiese

# Policy
- Main purpose of Moa language is that accelarate web development
- Moa language consists core and library
- The core is pure, which does not provide any IO
- The library provides IO via its interface

# example of yield, continue and break
ft loop: iterator[int]
fn loop:
  yield 1
  yield 2
  yield 3
  yield 4
  yield 5
  yield 6
loop n =>
  if n <= 2:
    continue
  if n >= 5:
    break
  puts(n) # display 3 and 4
loop.map(n => n <= 2 ? continue : n >= 5 ? break : n) # [3 4]
loop.mapi(_,i => i <= 1 ? continue : i >= 4 ? break : n) # [3 4]
