# main.moa
- io argv tcp.listen
- use logger
- file dispatcher

main =
  addr <- argv(1 ":8080")
  logger.debug("listen 0.0.0.0:8080")
  listen(addr socket => dispatcher.dispatch)


# logger.moa
- io print
- def logger

logger:
  debug string !
  debug s = print(s)
  error error !
  error e = print(e.message, e.stack.join(LF))


# dispatcher.moa
- io random
- protocol http
- file dispatcher(index login)

dispatcher:
  req http.request
  get s = req.query(s "")
  post s = req.body(s "")
  sid = req.cookie("sid" "")
  ok text = http.response(200 {"content-type" "text/plain; charset=utf8"} text)
  redirect l h = http.response(304 ({"location" l} & h) "")

dispatch = http req => go:
  d = dispatcher(req)
  go = req.method
  | get = go_get
  | post = go_post
  go_get = req.path
  | "/" = index.index(d)
  | _ = not_found
  go_post = req.path
  | "/login" = login.login(d)
  | _ = not_found
  not_found = http.response(404 {"content-type: text/plain; charset=utf8"} "not found")


# dispatcher/index.moa
index d = d.ok("hello " + d.sid)



# dispatcher/login.moa
- use logger

login d = go:
  email = d.get("email")
  password = d.get("password")
  go = email == "hello@example.com" && password == "hello"
  | success
  | failure
  success =
    sid <- random(2 ** 64).base64
    logger.info("login succeed " + email)
    d.redirect("/home" {"set-cookie" `sid=$sid`})
  failure = d.redirect("/login" {"set-cookie" "sid="})
