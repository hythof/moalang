#!node
const fs = require('node:fs')
const countNodes = s => {
  const symbols = '+-*/%^~&|<>=.()[]{},:!$@;`'
  let i = 0
  let count = 0
  while (i < s.length) {
    while (s[i] === ' ' || s[i] === '\n') {
      i++
    }
    if (s[i] === '#') {
      count += 1
      while (i < s.length && s[i] !== '\n') {
        i++
      }
    } else if (s[i] === '"') {
      count += 1
      while (i < s.length) {
        i++
        while (s[i] === '\\') {
          i += 2
        }
        if (s[i] === '"') {
          i++
          break
        }
      }
    } else if (('0' <= s[i] && s[i] <= '9')) {
      count += 1
      while (i < s.length && (s[i] === '.' || (('0' <= s[i] && s[i] <= '9')))) {
        i++
      }
    } else if (s[i] === '_' || ('A' <= s[i] && s[i] <= 'Z') || ('a' <= s[i] && s[i] <= 'z')) {
      count += 1
      while (i < s.length && (s[i] === '_' || (('A' <= s[i] && s[i] <= 'Z') || 'a' <= s[i] && s[i] <= 'z') || ('0' <= s[i] && s[i] <= '9'))) {
        i++
      }
    } else if (symbols.includes(s[i])) {
      count += 1
      while (symbols.includes(s[i])) {
        i += 1
      }
    } else if (i < s.length) {
      console.log('Skip unknown characer:', s[i])
      i+=1
    }
  }
  return count
}
const results = process.argv.slice(2).map(path => countNodes(fs.readFileSync(path, 'utf-8'))).sort()
const maxCount = Math.max(...results)
const maxLength = maxCount.toString().length
for (const result of results) {
  console.log(result.toString().padStart(maxLength), Math.floor(result / maxCount * 100))
}
