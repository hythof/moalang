#!node
const fs = require('fs')
const path = process.argv[2]
const items = process.argv.slice(2).map(path => {
  const regexp = /([.\[\](){}]|"[^"]*"|[:+\-*/=!%&|]+|[ \r\n\t]+|[^ \t\r\n.\[\](){}:+\-*/=!%&|]+)/
  const source = fs.readFileSync(path, 'utf-8')
  const tokens = source.replace(/#.*/g, '').split(regexp).filter(t => t.trim())
  const d = {}
  tokens.map(t => d[t] = (d[t] || 0) + 1)
  const number_format = n => ('    ' + n).substr(-4)
  const line_format = s => s.replace(/\n/g, '\\n')
  const frequency = Object.entries(d).sort((a, b) => b[1] - a[1] || b[0] - a[0]).slice(0, 30).map(([k, v]) => `  ${number_format(v)}\t${line_format(k)}`).join('\n')
  return {path, frequency, tokens: tokens.length}
})
const best = Math.min(...items.map(o => o.tokens))
items.map(o => {
  console.log(o.tokens, "\t", (o.tokens / best).toFixed(4),  "\t", o.path)
  console.log(o.frequency)
})
