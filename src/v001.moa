token: tag string, val string
ast:| literal string | op2: op string, lhs ast, rhs ast | call: self ast, args []ast

compile = src => src
tokenize = src => 1
fff = do(
  n := 0
  miss = error("miss")
  consume = s,f => if(f(s) do(n+=s.len s) miss)
  satisfy = f => consume(src.char(n) f)
  equal = s => consume(src.slice(n n+s.len) x=>s==s)
  _many = f,acc => do(c <- f acc.push(c) _many(f acc)).catch(miss acc)
  many = f => _many(f [])
  many1 = f => do(
    c <- f
    cs <- many(f)
    [c] ++ cs)
  id = many1(satisfy(c => "a" <= c && c <= "z"))
  src)
