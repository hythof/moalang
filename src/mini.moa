def tokenize src:
  var tokens []
  var token ""
  def push:
    if ((token.size) > 0):
      tokens.push token
      token = ""
  for i src.size:
    let c src.at i

    if (c == `"`):
      push
      token = `"`
      i += 1
      while (i < (src.size)) && (((src.at) i) != `"`):
        token += (src.at i)
        i += 1
      token += `"`
      push

    if c == "\n":
      push
      while (i < (src.size)) && ((src.at i) == "\n"):
        token = "\n"
        i += 1
        while (i < (src.size)) && ((src.at i) == " "):
          token += " "
          i += 1
      push
      i -= 1

    if (c == "(") || (c == ")"):
      push
      tokens.push c

    if (c == " "):
      push

    if (c != " ") && (c != "\n") && (c != "(") && (c != ")") && (c != `"`):
      token += c

  push
  tokens

def parse tokens:
  []

def generate nodes:
  "hi!"

def main:
  let src io.stdin
  let tokens tokenize src
  let nodes parse tokens
  let js generate nodes
  io.print "-- tokens:"
  io.print tokens.size
  io.print tokens
  io.print "-- nodes:"
  io.print nodes
