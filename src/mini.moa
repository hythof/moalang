def tokenize src:
  var tokens []
  var token ""
  var i 0
  def push:
    if token.size > 0:
      tokens.push token
      token = ""
  def quote q:
    if (src.at i) == q:
      push
      token = q
      i += 1
      while i < src.size && (src.at i) != q:
        token += src.at i
        i += 1
      token += q
      push
  def br:
    if (src.at i) == "\n":
      push
      while i < src.size && (src.at i) == "\n":
        token = "\n"
        i += 1
        while i < src.size && (src.at i) == " ":
          token += " "
          i += 1
      push
      i -= 1

  while i < src.size:
    quote `"`
    quote "`"
    br

    let c src.at i
    if c == "(" || c == ")":
      push
      tokens.push c

    if c == " ":
      push

    if c != " " && c != "\n" && c != "" && c != "" && c != `"`:
      token += c

    i += 1

  push
  tokens

def parse tokens:
  io.print tokens.size
  []

def generate nodes:
  "hi!"

def main:
  let src io.stdin
  let tokens tokenize src
  let nodes parse tokens
  let js generate nodes
  io.print "-- nodes:"
  io.dump nodes

test t:
  t.eq 1 1
