type:
  name string

arg:
  name string
  type type

node|
  id:
    name string
  call:
    target node
    argv array(node)
  method:
    target node
    name string
    argv array(node)
  func:
    name string
    args array(arg)
    ret type
    nodes array(node)

emit s = io.write(s + "\n")

tokenize src = []

parse tokens = [
  func("main" [] type("i32") [])
]

generate node = match(node
  func generate_func)

generate_func node =
  rt <- node.ret.name
  emit("define dso_local " + rt + " @" + node.name + "() {")
  emit("ret " + rt + " 0")
  emit("}")

main =
  src <- io.read
  tokens <- tokenize(src)
  nodes <- parse(tokens)
  nodes.map(node => generate(node))
