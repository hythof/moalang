compile src =
  tokens <- tokenize(src)
  tree <- parse(tokens)
  gen(tree)

token:
  line int
  column int
| literal string // string | int | float
| symbol string  // + - * / ( ) = : ...
| id string      // [a-z][a-z0-9]*
| call string    // func(

ast:
| int int
| string string
| op2 op string, left ast, right ast
| call ast list(ast)

parse src = go:
  pos 0
  parse_top = parse_exp
  parse_exp =
    v <- parse_unit
    parse_op2(v).or(v)
  parse_unit = parse_value
  parse_value = parse_int
  parse_op2 l =
    op <- read_op
    r <- parse_exp
    ast.op2(op l r)
  parse_int = many1(satisfy("0123456789".has))?.join("")?.to_i
